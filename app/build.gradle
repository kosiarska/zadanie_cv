apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    androidExtensions {
        experimental = true
    }

    defaultConfig {
        applicationId "pl.michal.tretowicz"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1020
        versionName "1.2.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        // You must set up an environment var before release signing
        // Run: export APP_KEY={password}
        release {
            storeFile file('keystore/release.keystore')
            keyAlias 'release'
            storePassword "release"
            keyPassword "release"
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    flavorDimensions "default"
    productFlavors {

        dev {
            buildConfigField "String", "API", "\"https://gist.github.com/\""
            resValue "string", "app_name", "CV Michał Trętowicz Dev"
        }

        production {
            buildConfigField "String", "API", "\"https://gist.github.com/\""
            resValue "string", "app_name", "CV Michał Trętowicz"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            versionNameSuffix ".debug"
            debuggable true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        // Common Test Dir
        def commonTestDir = 'src/commonTest/kotlin'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    // https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}


repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.fabric.io/public' }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    final ANDROID_X_VERSION = '1.1.0'
    final DAGGER_VERSION = '2.16'
    final ANKO_VERSION = '0.10.6'
    final RETROFIT_VERSION = '2.4.0'
    final HAMCREST_VERSION = '1.3'
    final MOCKITO_VERSION = '2.19.0'

    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:$MOCKITO_VERSION"
    def mockitoKotlin = "com.nhaarman:mockito-kotlin:1.5.0"

    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'


    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'com.github.GrenderG:Toasty:1.4.2'
    // App Dependencies
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    debugImplementation 'com.willowtreeapps.hyperion:hyperion-core:0.9.27'
    releaseImplementation 'com.willowtreeapps.hyperion:hyperion-core-no-op:0.9.27'
    debugImplementation 'com.willowtreeapps.hyperion:hyperion-crash:0.9.27'
    debugImplementation 'com.willowtreeapps.hyperion:hyperion-shared-preferences:0.9.27'
    debugImplementation 'com.willowtreeapps.hyperion:hyperion-timber:0.9.27'

    //androidX
    implementation "androidx.appcompat:appcompat:$ANDROID_X_VERSION"
    implementation "androidx.recyclerview:recyclerview:$ANDROID_X_VERSION"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.annotation:annotation:$ANDROID_X_VERSION"
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "androidx.appcompat:appcompat:$ANDROID_X_VERSION"
    //  annotations
    compileOnly "org.glassfish:javax.annotation:10.0-b28"

    //  dagger2
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    kapt daggerCompiler

    //  view
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'

    //  rxjava2
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation "io.reactivex.rxjava2:rxjava:2.1.12"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    //  utils
    implementation 'com.github.ajalt:timberkt:1.5.0'
    implementation "org.jetbrains.anko:anko-commons:$ANKO_VERSION"


    //  retrofit
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.5.0'


    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Unit tests dependencies
    testImplementation jUnit
    testImplementation mockito
    testImplementation(mockitoKotlin) {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }

    //  testing
    testImplementation "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testImplementation "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testImplementation "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
    testImplementation 'org.robolectric:robolectric:3.7.1'

    // Instrumentation test dependencies
    androidTestImplementation jUnit
    androidTestImplementation mockito
    androidTestImplementation "org.mockito:mockito-android:$MOCKITO_VERSION"
    androidTestImplementation(mockitoKotlin) {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    androidTestImplementation "androidx.annotation:annotation:$ANDROID_X_VERSION"
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.3.0-beta01') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-beta01'
    androidTestImplementation 'androidx.test:runner:1.3.0-beta01'
    androidTestImplementation 'androidx.test:rules:1.3.0-beta01'
}

kapt {
    generateStubs = true
}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

task forceCleanAndRebuildDebug(group: 'proexe', description: 'Delete 2 build directories (build and app/build), clean and build debug', type: GradleBuild) {
    delete "build"
    delete "../build"
    tasks = ['clean', 'assembleDebug']
}

